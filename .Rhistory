enter_fade() +
exit_shrink()
animate(goo, nframes = 100, fps = 5, end_pause = 4,renderer=gifski_renderer("log.gif"))
## Create a gif
rm(list=ls())
library(gifski)
library(gganimate)
setwd("/Users/davidarnold/Dropbox/Teaching/EP5Bookdown/gifs")
xstart <- c(1,2,3,4,5,6,7,8,9,10)
ystart <- 0.2*log(xstart)+1
xend <- log(xstart)
yend <- ystart
steps <- 2
xtotal <- rep(0,steps*length(xstart))
ytotal <- rep(0,steps*length(xstart))
step <- rep(0,steps*length(xstart))
xtotal[1:length(xstart)]=xstart
ytotal[1:length(ystart)]=ystart
step[1:length(xstart)]=1
index_x = length(xstart)+1
index_y = length(ystart)+1
for (i in 2:steps){
xtotal[index_x:(index_x+length(xstart)-1)]=xstart+(xend-xstart)*((i)/steps)
ytotal[index_y:(index_y+length(ystart)-1)]=ystart+ (yend-ystart)*((i)/steps)
step[index_x:(index_x+length(xstart)-1)]=i
index_x=index_x+length(xstart)
index_y=index_y+length(ystart)
}
newdf <- as.data.frame(cbind(xtotal,ytotal,step))
library(ggplot2)
library(gganimate)
library(transformr)
goo <- ggplot(newdf, aes(x=xtotal,y=ytotal)) +
geom_point() +
geom_smooth(method="lm",se=FALSE) +
xlim(0,10) +
ylab("Y variable") +
xlab("X variable") +
ggtitle("Log Transformation of X") +
# Here comes the gganimate code
transition_states(step) +
enter_fade() +
exit_shrink()
animate(goo, nframes = 100, fps = 10, end_pause = 4,renderer=gifski_renderer("log.gif"))
## Create a gif
rm(list=ls())
library(gifski)
library(gganimate)
setwd("/Users/davidarnold/Dropbox/Teaching/EP5Bookdown/gifs")
xstart <- c(1,2,3,4,5,6,7,8,9,10)
ystart <- 0.2*log(xstart)+1
xend <- log(xstart)
yend <- ystart
steps <- 2
xtotal <- rep(0,steps*length(xstart))
ytotal <- rep(0,steps*length(xstart))
step <- rep(0,steps*length(xstart))
xtotal[1:length(xstart)]=xstart
ytotal[1:length(ystart)]=ystart
step[1:length(xstart)]=1
index_x = length(xstart)+1
index_y = length(ystart)+1
for (i in 2:steps){
xtotal[index_x:(index_x+length(xstart)-1)]=xstart+(xend-xstart)*((i)/steps)
ytotal[index_y:(index_y+length(ystart)-1)]=ystart+ (yend-ystart)*((i)/steps)
step[index_x:(index_x+length(xstart)-1)]=i
index_x=index_x+length(xstart)
index_y=index_y+length(ystart)
}
newdf <- as.data.frame(cbind(xtotal,ytotal,step))
library(ggplot2)
library(gganimate)
library(transformr)
goo <- ggplot(newdf, aes(x=xtotal,y=ytotal)) +
geom_point() +
geom_smooth(method="lm",se=FALSE) +
xlim(0,10) +
ylab("Y variable") +
xlab("X variable") +
ggtitle("Log Transformation of X") +
# Here comes the gganimate code
transition_states(step) +
enter_fade()
animate(goo, nframes = 100, fps = 10, end_pause = 4,renderer=gifski_renderer("log.gif"))
xstart <- c(1,1,1,1,1,1,1,1,1,1)
ystart <- c(1,1,1,1,1,1,1,1,1,1)
xnoise <- randu(0,0.02)
xnoise <- rnorm(length(xstart),0,0.1)
xstart <- c(1,1,1,1,1,1,1,1,1,1)
ystart <- c(1,1,1,1,1,1,1,1,1,1)
xnoise <- rnorm(length(xstart),0,0.1)
ynoise <- rnorm(length(xstart),0,0.1)
## Create a gif
rm(list=ls())
library(gifski)
library(gganimate)
setwd("/Users/davidarnold/Dropbox/Teaching/EP5Bookdown/gifs")
xstart <- c(1,1,1,1,1,1,1,1,1,1)
ystart <- c(1,1,1,1,1,1,1,1,1,1)
xnoise <- rnorm(length(xstart),0,0.1)
ynoise <- rnorm(length(xstart),0,0.1)
xend <- xstart + xnoise
yend <- ystart + ynoise
steps <- 2
xtotal <- rep(0,steps*length(xstart))
ytotal <- rep(0,steps*length(xstart))
step <- rep(0,steps*length(xstart))
xtotal[1:length(xstart)]=xstart
ytotal[1:length(ystart)]=ystart
step[1:length(xstart)]=1
index_x = length(xstart)+1
index_y = length(ystart)+1
for (i in 2:steps){
xtotal[index_x:(index_x+length(xstart)-1)]=xstart+(xend-xstart)*((i)/steps)
ytotal[index_y:(index_y+length(ystart)-1)]=ystart+ (yend-ystart)*((i)/steps)
step[index_x:(index_x+length(xstart)-1)]=i
index_x=index_x+length(xstart)
index_y=index_y+length(ystart)
}
newdf <- as.data.frame(cbind(xtotal,ytotal,step))
library(ggplot2)
library(gganimate)
library(transformr)
goo <- ggplot(newdf, aes(x=xtotal,y=ytotal)) +
geom_point() +
xlim(0,2) +
ylim(0,2) +
ylab("Y variable") +
xlab("X variable") +
ggtitle("Example of Jitter") +
# Here comes the gganimate code
transition_states(step) +
enter_fade()
animate(goo, nframes = 100, fps = 10, end_pause = 4,renderer=gifski_renderer("jitter.gif"))
## Create a gif
rm(list=ls())
library(gifski)
library(gganimate)
setwd("/Users/davidarnold/Dropbox/Teaching/EP5Bookdown/gifs")
xstart <- c(1,1,1,1,1,1,1,1,1,1)
ystart <- c(1,1,1,1,1,1,1,1,1,1)
xnoise <- rnorm(length(xstart),0,0.1)
ynoise <- rnorm(length(xstart),0,0.1)
xend <- xstart + xnoise
yend <- ystart + ynoise
steps <- 2
xtotal <- rep(0,steps*length(xstart))
ytotal <- rep(0,steps*length(xstart))
step <- rep(0,steps*length(xstart))
xtotal[1:length(xstart)]=xstart
ytotal[1:length(ystart)]=ystart
step[1:length(xstart)]=1
index_x = length(xstart)+1
index_y = length(ystart)+1
for (i in 2:steps){
xtotal[index_x:(index_x+length(xstart)-1)]=xstart+(xend-xstart)*((i)/steps)
ytotal[index_y:(index_y+length(ystart)-1)]=ystart+ (yend-ystart)*((i)/steps)
step[index_x:(index_x+length(xstart)-1)]=i
index_x=index_x+length(xstart)
index_y=index_y+length(ystart)
}
newdf <- as.data.frame(cbind(xtotal,ytotal,step))
library(ggplot2)
library(gganimate)
library(transformr)
goo <- ggplot(newdf, aes(x=xtotal,y=ytotal)) +
geom_point() +
xlim(0,2) +
ylim(0,2) +
ylab("Y variable") +
xlab("X variable") +
ggtitle("Example of Jitter") +
theme_minimal() +
# Here comes the gganimate code
transition_states(step) +
enter_fade()
animate(goo, nframes = 100, fps = 10, end_pause = 4,renderer=gifski_renderer("jitter.gif"))
animate(goo, nframes = 100, fps = 10, end_pause = 4,renderer=gifski_renderer("logtransform.gif"))
## Create a gif
rm(list=ls())
library(gifski)
library(gganimate)
setwd("/Users/davidarnold/Dropbox/Teaching/EP5Bookdown/gifs")
xstart <- c(1,2,3,4,5,6,7,8,9,10)
ystart <- 0.2*log(xstart)+1
xend <- log(xstart)
yend <- ystart
steps <- 2
xtotal <- rep(0,steps*length(xstart))
ytotal <- rep(0,steps*length(xstart))
step <- rep(0,steps*length(xstart))
xtotal[1:length(xstart)]=xstart
ytotal[1:length(ystart)]=ystart
step[1:length(xstart)]=1
index_x = length(xstart)+1
index_y = length(ystart)+1
for (i in 2:steps){
xtotal[index_x:(index_x+length(xstart)-1)]=xstart+(xend-xstart)*((i)/steps)
ytotal[index_y:(index_y+length(ystart)-1)]=ystart+ (yend-ystart)*((i)/steps)
step[index_x:(index_x+length(xstart)-1)]=i
index_x=index_x+length(xstart)
index_y=index_y+length(ystart)
}
newdf <- as.data.frame(cbind(xtotal,ytotal,step))
library(ggplot2)
library(gganimate)
library(transformr)
goo <- ggplot(newdf, aes(x=xtotal,y=ytotal)) +
geom_point() +
geom_smooth(method="lm",se=FALSE) +
xlim(0,10) +
ylab("Y variable") +
xlab("X variable") +
ggtitle("Log Transformation of X") +
theme_minimal()+
# Here comes the gganimate code
transition_states(step) +
enter_fade()
animate(goo, nframes = 100, fps = 10, end_pause = 4,renderer=gifski_renderer("logtransform.gif"))
## Create a gif
rm(list=ls())
library(gifski)
library(gganimate)
setwd("/Users/davidarnold/Dropbox/Teaching/EP5Bookdown/gifs")
xstart <- c(1,1,1,1,1,1,1,1,1,1)
ystart <- c(1,1,1,1,1,1,1,1,1,1)
xnoise <- rnorm(length(xstart),0,0.1)
ynoise <- rnorm(length(xstart),0,0.1)
xend <- xstart + xnoise
yend <- ystart + ynoise
steps <- 2
xtotal <- rep(0,steps*length(xstart))
ytotal <- rep(0,steps*length(xstart))
step <- rep(0,steps*length(xstart))
xtotal[1:length(xstart)]=xstart
ytotal[1:length(ystart)]=ystart
step[1:length(xstart)]=1
index_x = length(xstart)+1
index_y = length(ystart)+1
for (i in 2:steps){
xtotal[index_x:(index_x+length(xstart)-1)]=xstart+(xend-xstart)*((i)/steps)
ytotal[index_y:(index_y+length(ystart)-1)]=ystart+ (yend-ystart)*((i)/steps)
step[index_x:(index_x+length(xstart)-1)]=i
index_x=index_x+length(xstart)
index_y=index_y+length(ystart)
}
newdf <- as.data.frame(cbind(xtotal,ytotal,step))
library(ggplot2)
library(gganimate)
library(transformr)
goo <- ggplot(newdf, aes(x=xtotal,y=ytotal)) +
geom_point() +
xlim(0,2) +
ylim(0,2) +
ylab("Y variable") +
xlab("X variable") +
ggtitle("Example of Jitter") +
theme_minimal() +
# Here comes the gganimate code
transition_states(step) +
enter_fade()
animate(goo, nframes = 300, fps = 30, end_pause = 4,renderer=gifski_renderer("jitter.gif"))
## Create a gif
rm(list=ls())
library(gifski)
library(gganimate)
setwd("/Users/davidarnold/Dropbox/Teaching/EP5Bookdown/gifs")
xstart <- c(1,1,1,1,1,1,1,1,1,1)
ystart <- c(1,1,1,1,1,1,1,1,1,1)
xnoise <- rnorm(length(xstart),0,0.1)
ynoise <- rnorm(length(xstart),0,0.1)
xend <- xstart + xnoise
yend <- ystart + ynoise
steps <- 2
xtotal <- rep(0,steps*length(xstart))
ytotal <- rep(0,steps*length(xstart))
step <- rep(0,steps*length(xstart))
xtotal[1:length(xstart)]=xstart
ytotal[1:length(ystart)]=ystart
step[1:length(xstart)]=1
index_x = length(xstart)+1
index_y = length(ystart)+1
for (i in 2:steps){
xtotal[index_x:(index_x+length(xstart)-1)]=xstart+(xend-xstart)*((i)/steps)
ytotal[index_y:(index_y+length(ystart)-1)]=ystart+ (yend-ystart)*((i)/steps)
step[index_x:(index_x+length(xstart)-1)]=i
index_x=index_x+length(xstart)
index_y=index_y+length(ystart)
}
newdf <- as.data.frame(cbind(xtotal,ytotal,step))
library(ggplot2)
library(gganimate)
library(transformr)
goo <- ggplot(newdf, aes(x=xtotal,y=ytotal)) +
geom_point() +
xlim(0,2) +
ylim(0,2) +
ylab("Y variable") +
xlab("X variable") +
ggtitle("Example of Jitter") +
theme_minimal() +
# Here comes the gganimate code
transition_states(step) +
enter_fade()
animate(goo, nframes = 100, fps = 20, end_pause = 4,renderer=gifski_renderer("jitter.gif"))
-557/6213
-1647/-2437
64485*0.054
(65585-3482.19)/(65585)
105+303
0.05*0.5
0.1*0.2
12/165
88/90
165-126
39/165
3+5+5+4
17/30
72+(74-44)+(70-51)+(70-56)
70*5
145*2+110
5/60
28.68847+4.72*log(40000,base=10)
28.68847+4.72*log(40000)
35/315
50/350
40/350
82.9-22.3
# Week 7 Part 1
# clear environment
rm(list=ls())
setwd("~/Dropbox/Teaching/EP5/slides/07_week")
##############
# For loops
##############
# Very inefficient coding example
# Print 2*i for i = 1:5
i <- 1
2*i
i <-2
2*i
i <-3
2*i
i <-4
2*i
i <-5
2*i
# Using a for-loop
for (i in 1:5) {
print(2*i)
}
for (i in 1:100){
print(2*i)
}
# Even if we increase iterations, code still works
## second example (looping through a vector)
vec <- c(3,10,99)
for (i in vec) {
print(2*i)
}
#
for (i in 1:length(vec)) {
print(2*vec[i])
}
## Ramey and Ramey (2010)
## Need to install tidyverse if you have not already done so
##install.packages("tidyverse")
library("tidyverse")
## load in rugrat race data normally
rr <- read.csv("rugratrace.csv")
## change it to a "tibble"
rr <- as_tibble(rr)
## use read_csv to read in directly as a tibble
rr <- read_csv("rugratrace.csv")
## filter() function
## we want to take a subset of the data
## that only includes mothers age 25-34
mothers2534<-filter(rr, age<=34 & age>=25 & mother2==1)
## the dataframe above has a number of variables we don't
## need. Use select() to find only the variables we need
mothers2534 <- select(mothers2534,age,childtot,mother2,dataset)
# Step 2: unique list of years
years <- unique(mothers2534$dataset)
# Step 3 + 4: iterate over each year and print mean childcare per week
for (i in 1:length(years)) {
sub <- filter(mothers2534,dataset==years[i])
mean(sub$childtot)
}
head(rr$mother2,rr$age,rr$childtot,rr$dataset)
head(rr$mother2)
head(rr$mother2,rr$father2)
sum <- 10
for (i in 1:5) {
sum <- sum +i
}
# clear environment
rm(list=ls())
library("tidyverse")
setwd("/Users/davidarnold/Dropbox/Teaching/EP5/Practice/data")
# load data
athlete <- read_csv("athlete_events.csv")
athlete <- athlete %>% filter(Year==1992 | Year ==1996 | Year == 2000)
unique(year)
rm(list=ls())
library("tidyverse")
setwd("/Users/davidarnold/Dropbox/Teaching/EP5/Practice/data")
# load data
athlete <- read_csv("athlete_events.csv")
# filter
athlete <- athlete %>% filter(Year==1992 | Year ==1996 | Year == 2000)
# unique years
unique(athlete$year)
# unique years
unique(athlete$Year)
rm(list=ls())
library("tidyverse")
setwd("/Users/davidarnold/Dropbox/Teaching/EP5/Practice/data")
# load data
athlete <- read_csv("athlete_events.csv")
# filter
athlete <- athlete %>%
filter(Year==1992 | Year ==1996 | Year == 2000) |>
select(Year,Age,Height,Team,Event,Medal)
# filter
athlete <- athlete %>%
filter(Year==1992 | Year ==1996 | Year == 2000) |>
select(Year,Age,Height,Team,Event,Medal)
head(df)
head(df)
\
head(athlete)
# load data
athlete <- read_csv("athlete_events.csv")
# filter
athlete <- athlete %>%
filter(Year==1992 | Year ==1996 | Year == 2000) |>
select(Year,Age,Height,NOC,Event,Name)
head(athlete)
# load data
athlete <- read_csv("athlete_events.csv")
# filter
athlete <- athlete %>%
filter(Year==1992 | Year ==1996 | Year == 2000) |>
select(Year,Age,Height,NOC,Sport,Name)
head(athlete)
athlete <- read_csv("athlete_events.csv")
# filter
athlete <- athlete %>%
filter(Year==1992 | Year ==1996 | Year == 2000) |>
select(Year,Age,Height,NOC,Event,Name)
head(athlete)
View(athlete)
athlete <- read_csv("athlete_events.csv")
# filter
athlete <- athlete %>%
filter(Year==1992 | Year ==1996 | Year == 2000) %>%
select(Year,Age,Height,NOC,Name)
athlete <- distinct(athlete, .keep_all = T)
library("tidyverse")
setwd("/Users/davidarnold/Dropbox/Teaching/EP5/Practice/data")
# load data
athlete <- read_csv("athlete_events.csv")
# filter
athlete <- athlete %>%
filter(Year==1992 | Year ==1996 | Year == 2000) %>%
select(Year,Age,Height,NOC,Name)
athlete <- distinct(athlete)
setwd("/Users/davidarnold/Dropbox/Teaching/EP5/Practice/data")
# load data
athlete <- read_csv("athlete_events.csv")
# filter
athlete <- athlete %>%
filter(Year==1992 | Year ==1996 | Year == 2000) %>%
select(Year,Age,Height,NOC,Name)
athlete <- distinct(athlete)
# load data
athlete <- read_csv("athlete_events.csv")
# filter
athlete <- athlete %>%
filter(Year==1992 | Year ==1996 | Year == 2000) %>%
select(Year,Age,Height,NOC,Name)
athlete <- distinct(athlete)
View(athlete)
year <- unique(athlete$Year)
for (i in 1:3) {
temp <- athlete %>% filter(Year==Year[i])
length(unique(temp$NOC))
}
year <- unique(athlete$Year)
number <-c(1,1,1)
for (i in 1:3) {
temp <- athlete %>% filter(Year==Year[i])
numebr[i] <- length(unique(temp$NOC))
}
year <- unique(athlete$Year)
number <-c(1,1,1)
for (i in 1:3) {
temp <- athlete %>% filter(Year==Year[i])
number[i] <- length(unique(temp$NOC))
}
avg <- athlete %>% filter(Year == 2000) %>%
group_by(NOC) %>%
summarize(meanage=mean(age,na.rm=T))
avg <- athlete %>% filter(Year == 2000) %>%
group_by(NOC) %>%
summarize(meanage=mean(Age,na.rm=T))
View(avg)
hist(avg$meanage)
20+14+15/3
(20+14+15)/3
(22+15+26)/3
(25+30+23)/(3)
